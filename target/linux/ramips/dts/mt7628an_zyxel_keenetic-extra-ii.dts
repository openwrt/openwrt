#include "mt7628an.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>

/ {
	compatible = "zyxel,keenetic-extra-ii", "mediatek,mt7628an-soc";
	model = "Zyxel Keenetic Extra II";

	aliases {
		led-boot = &led_power;
		led-failsafe = &led_power;
		led-running = &led_power;
		led-upgrade = &led_power;
	};

	chosen {
		bootargs = "console=ttyS0,57600n8";
	};

	keys {
		compatible = "gpio-keys";

		reset {
			label = "reset";
			gpios = <&gpio 2 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_RESTART>;
		};

		wps {
			label = "wps";
			gpios = <&gpio 46 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_WPS_BUTTON>;
		};

		fn {
			label = "fn";
			gpios = <&gpio 45 GPIO_ACTIVE_LOW>;
			linux,code = <BTN_0>;
		};
	};

	leds {
		compatible = "gpio-leds";

		led_power: power {
			function = LED_FUNCTION_POWER;
			color = <LED_COLOR_ID_GREEN>;
			gpios = <&gpio 11 GPIO_ACTIVE_LOW>;
		};

		internet {
			label = "green:internet";
			gpios = <&gpio 44 GPIO_ACTIVE_LOW>;
		};

		wifi {
			label = "green:wifi";
			gpios = <&gpio 37 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "phy0tpt";
		};

		usb {
			function = LED_FUNCTION_USB;
			color = <LED_COLOR_ID_GREEN>;
			gpios = <&gpio 1 GPIO_ACTIVE_LOW>;
			trigger-sources = <&ohci_port1>, <&ehci_port1>;
			linux,default-trigger = "usbport";
		};
	};

	gpio_export {
		compatible = "gpio-export";

		usbpower {
			gpio-export,name = "usbpower";
			gpio-export,output = <1>;
			gpios = <&gpio 6 GPIO_ACTIVE_HIGH>;
		};
	};

	virtual_flash {
		compatible = "mtd-concat";
		devices = <&firmware1 &firmware2>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition@0 {
				compatible = "denx,uimage";
				label = "firmware";
				reg = <0x0 0x1d20000>;
			};
		};
	};
};

&spi0 {
	status = "okay";

	flash@0 {
		compatible = "jedec,spi-nor";
		reg = <0>;
		spi-max-frequency = <32000000>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			partition@0 {
				label = "u-boot";
				reg = <0x0 0x30000>;
				read-only;
			};

			partition@30000 {
				label = "u-config";
				reg = <0x30000 0x10000>;
				read-only;
			};

			partition@40000 {
				label = "rf-eeprom";
				reg = <0x40000 0x10000>;
				read-only;

				nvmem-layout {
					compatible = "fixed-layout";
					#address-cells = <1>;
					#size-cells = <1>;

					eeprom_factory_0: eeprom@0 {
						reg = <0x0 0x400>;
					};

					eeprom_factory_8000: eeprom@8000 {
						reg = <0x8000 0x200>;
					};

					macaddr_factory_4: macaddr@4 {
						reg = <0x4 0x6>;
					};
				};
			};

			firmware1: partition@50000 {
				label = "firmware_1";
				reg = <0x50000 0xe90000>;
			};

			partition@ee0000 {
				label = "config_1";
				reg = <0xee0000 0x10000>;
				read-only;
			};

			partition@ef0000 {
				label = "storage";
				reg = <0xef0000 0x100000>;
				read-only;
			};

			partition@ff0000 {
				label = "dump";
				reg = <0xff0000 0x10000>;
				read-only;
			};

			partition@1000000 {
				label = "u-state";
				reg = <0x1000000 0x30000>;
				read-only;
			};

			partition@1030000 {
				label = "u-config_res";
				reg = <0x1030000 0x10000>;
				read-only;
			};

			partition@1040000 {
				label = "rf-eeprom_res";
				reg = <0x1040000 0x10000>;
				read-only;
			};

			firmware2: partition@1050000 {
				label = "firmware_2";
				reg = <0x1050000 0xe90000>;
			};

			partition@1ee0000 {
				label = "config_2";
				reg = <0x1ee0000 0x10000>;
				read-only;
			};
		};
	};
};

&ethernet {
	nvmem-cells = <&macaddr_factory_4>;
	nvmem-cell-names = "mac-address";
};

&esw {
	mediatek,portmap = <0x3e>;
};

&wmac {
	status = "okay";

	nvmem-cells = <&eeprom_factory_0>;
	nvmem-cell-names = "eeprom";
};

&pcie {
	status = "okay";
};

&pcie0 {
	mt76@0,0 {
		compatible = "mediatek,mt76";
		reg = <0x0000 0 0 0 0>;
		nvmem-cells = <&eeprom_factory_8000>;
		nvmem-cell-names = "eeprom";
		ieee80211-freq-limit = <5000000 6000000>;
	};
};

&state_default {
	gpio {
		groups = "gpio", "i2s", "refclk", "spi cs1", "uart1", "wled_an";
		function = "gpio";
	};
};
