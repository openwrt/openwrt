From: Mieczyslaw Nalewaj <namiltd@yahoo.com>
Date: Tue, 28 Oct 2025 22:50:41 +0100
Subject: [PATCH] mt7620: avoid direct jal imm26 in resume_user_mode_work

This patch forces an indirect call (via a function pointer) on the mt7620
platform when invoking blkcg_maybe_throttle_current() from
resume_user_mode_work(). Avoiding a direct `jal` with a 26-bit immediate
jump target prevents sporadic incorrect jump targets / intermittent oopses,
crashes or hanging behavior that can appear on affected platforms.

The change is targeted: it only alters the call site when CONFIG_NET_RALINK_MT7620
is enabled and does not change the functional behaviour of resume_user_mode_work().

Signed-off-by: Mieczyslaw Nalewaj <namiltd@yahoo.com>

---
 a/include/linux/resume_user_mode.h | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/include/linux/resume_user_mode.h
+++ b/include/linux/resume_user_mode.h
@@ -57,7 +57,13 @@ static inline void resume_user_mode_work
 #endif
 
 	mem_cgroup_handle_over_high(GFP_KERNEL);
+#ifdef CONFIG_NET_RALINK_MT7620
+	typedef void (*bmtc_t)(void);
+	volatile bmtc_t bmtc_fn = (bmtc_t)blkcg_maybe_throttle_current;
+	bmtc_fn();
+#else
 	blkcg_maybe_throttle_current();
+#endif
 
 	rseq_handle_notify_resume(NULL, regs);
 }
