// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         IntControl.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef INTCONTROL_H__
#define INTCONTROL_H__



typedef union {
  struct {
    uint32 Reserved                       :9; 
    uint32 DsTunerIrq                     :1; 
    uint32 DsIrq                          :1; 
    uint32 D3macIrq                       :1; 
    uint32 D3macDsaIrq                    :1; 
    uint32 D3macDsbIrq                    :1; 
    uint32 D3macTokaIrq                   :1; 
    uint32 D3macTokbIrq                   :1; 
    uint32 Reserved2                      :5; 
    uint32 UsIrq                          :1; 
    uint32 DlmacMacIrq                    :1; 
    uint32 Tc0Irq                         :1; 
    uint32 Tc1Irq                         :1; 
    uint32 Tc2Irq                         :1; 
    uint32 Tc3Irq                         :1; 
    uint32 CryptoIrq                      :1; 
    uint32 SegHostIrq                     :1; 
    uint32 SegUtpIrq                      :1; 
    uint32 U3macMacIrqa                   :1; 
    uint32 U3macMacIrqb                   :1; 
  } Bits;
  uint32 Reg32;
}  IntControlDocsisIrqMask;


typedef union {
  struct {
    uint32 Reserved                       :9; 
    uint32 DsTunerIrq                     :1; 
    uint32 DsIrq                          :1; 
    uint32 D3macIrq                       :1; 
    uint32 D3macDsaIrq                    :1; 
    uint32 D3macDsbIrq                    :1; 
    uint32 D3macTokaIrq                   :1; 
    uint32 D3macTokbIrq                   :1; 
    uint32 Reserved2                      :5; 
    uint32 UsIrq                          :1; 
    uint32 DlmacMacIrq                    :1; 
    uint32 Tc0Irq                         :1; 
    uint32 Tc1Irq                         :1; 
    uint32 Tc2Irq                         :1; 
    uint32 Tc3Irq                         :1; 
    uint32 CryptoIrq                      :1; 
    uint32 SegHostIrq                     :1; 
    uint32 SegUtpIrq                      :1; 
    uint32 U3macMacIrqa                   :1; 
    uint32 U3macMacIrqb                   :1; 
  } Bits;
  uint32 Reg32;
}  IntControlDocsisIrqSense;


typedef union {
  struct {
    uint32 Reserved                       :9; 
    uint32 DsTunerIrq                     :1; 
    uint32 DsIrq                          :1; 
    uint32 D3macIrq                       :1; 
    uint32 D3macDsaIrq                    :1; 
    uint32 D3macDsbIrq                    :1; 
    uint32 D3macTokaIrq                   :1; 
    uint32 D3macTokbIrq                   :1; 
    uint32 Reserved2                      :5; 
    uint32 UsIrq                          :1; 
    uint32 DlmacMacIrq                    :1; 
    uint32 Tc0Irq                         :1; 
    uint32 Tc1Irq                         :1; 
    uint32 Tc2Irq                         :1; 
    uint32 Tc3Irq                         :1; 
    uint32 CryptoIrq                      :1; 
    uint32 SegHostIrq                     :1; 
    uint32 SegUtpIrq                      :1; 
    uint32 U3macMacIrqa                   :1; 
    uint32 U3macMacIrqb                   :1; 
  } Bits;
  uint32 Reg32;
}  IntControlDocsisIrqStatus;


typedef union {
  struct {
    uint32 Reserved                       :2; 
    uint32 ExtIrqLevelSense               :6; 
                                              
                                              
    uint32 EdgeInsensitive                :6; 
                                              
                                              
    uint32 ExtIrqMask                     :6; 
                                              
                                              
    uint32 ExtIrqStatus                   :6; 
                                              
    uint32 ExtIrqSense                    :6; 
                                              
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  IntControlExtIrqControl;


typedef union {
  struct {
    uint32 Reserved                       :2; 
    uint32 ExtIrq5Sel                     :5; 
    uint32 ExtIrq4Sel                     :5; 
    uint32 ExtIrq3Sel                     :5; 
    uint32 ExtIrq2Sel                     :5; 
    uint32 ExtIrq1Sel                     :5; 
    uint32 ExtIrq0Sel                     :5; 
  } Bits;
  uint32 Reg32;
}  IntControlExtIrqMuxSel0;


typedef union {
  struct {
    uint32 Reserved                       :24;
    uint32 RbusErrorIrq                   :1; 
    uint32 BridgeTimeoutErrorIrq          :1; 
    uint32 ReqoutPlenErrorIrq             :1; 
    uint32 Ubus2rbusRepoutErrorIrq        :1; 
    uint32 BridgeUbusErrorIrq             :1; 
    uint32 DevtimeoutIrq                  :1; 
    uint32 ErrorPortXactionIrq            :1; 
    uint32 BadBootLocIrq                  :1; 
  } Bits;
  uint32 Reg32;
}  IntControlIntPeriphIrqStatus;


typedef union {
  struct {
    uint32 Reserved                       :27;
    uint32 Fapirq                         :1; 
    uint32 Mspirq                         :1; 
    uint32 Mepirq                         :1; 
    uint32 Dtpirq                         :1; 
    uint32 Utpirq                         :1; 
  } Bits;
  uint32 Reg32;
}  IntControlIopIrqMask;


typedef union {
  struct {
    uint32 Reserved                       :27;
    uint32 DtpIrq                         :1; 
    uint32 Fapirq                         :1; 
    uint32 Mspirq                         :1; 
    uint32 Mepirq                         :1; 
    uint32 Utpirq                         :1; 
  } Bits;
  uint32 Reg32;
}  IntControlIopIrqSense;


typedef union {
  struct {
    uint32 Reserved                       :27;
    uint32 Fapirq                         :1; 
    uint32 Mspirq                         :1; 
    uint32 Mepirq                         :1; 
    uint32 DtpIrq                         :1; 
    uint32 Utpirq                         :1; 
  } Bits;
  uint32 Reg32;
}  IntControlIopIrqStatus;


typedef union {
  struct {
    uint32 PcieEpIrqMask7                 :1; 
                                              
    uint32 PcieEpIrqMask6                 :1; 
                                              
    uint32 PcieEpIrqMask5                 :1; 
                                              
    uint32 PcieEpIrqMask4                 :1; 
                                              
    uint32 PcieEpIrqMask3                 :1; 
                                              
    uint32 PcieEpIrqMask2                 :1; 
                                              
    uint32 PcieEpIrqMask1                 :1; 
                                              
    uint32 PcieEpIrqMask0                 :1; 
                                              
    uint32 UbuscaptureIrqMask7            :1; 
                                              
    uint32 UbuscaptureIrqMask6            :1; 
                                              
    uint32 UbuscaptureIrqMask5            :1; 
                                              
    uint32 UbuscaptureIrqMask4            :1; 
                                              
    uint32 UbuscaptureIrqMask3            :1; 
                                              
    uint32 UbuscaptureIrqMask2            :1; 
                                              
    uint32 UbuscaptureIrqMask1            :1; 
                                              
    uint32 UbuscaptureIrqMask0            :1; 
                                              
    uint32 TestbusIrqMask7                :1; 
                                              
    uint32 TestbusIrqMask6                :1; 
                                              
    uint32 TestbusIrqMask5                :1; 
                                              
    uint32 TestbusIrqMask4                :1; 
                                              
    uint32 TestbusIrqMask3                :1; 
                                              
    uint32 TestbusIrqMask2                :1; 
                                              
    uint32 TestbusIrqMask1                :1; 
                                              
    uint32 TestbusIrqMask0                :1; 
                                              
    uint32 SysirqIrqMask7                 :1; 
                                              
    uint32 SysirqIrqMask6                 :1; 
                                              
    uint32 SysirqIrqMask5                 :1; 
                                              
    uint32 SysirqIrqMask4                 :1; 
                                              
    uint32 SysirqIrqMask3                 :1; 
                                              
    uint32 SysirqIrqMask2                 :1; 
                                              
    uint32 SysirqIrqMask1                 :1; 
    uint32 SysirqIrqMask0                 :1; 
  } Bits;
  uint32 Reg32;
}  IntControlIrqOutMask;


typedef union {
  struct {
    uint32 ExtIrq                         :1; 
    uint32 Reserved                       :2; 
    uint32 ObObIrq                        :1; 
    uint32 DavicIrq                       :1; 
    uint32 GphyIrqb                       :1; 
    uint32 UniIrq                         :1; 
    uint32 UniIrq2                        :1; 
    uint32 ApmIudmaIrq                    :1; 
    uint32 ApmIrq                         :1; 
    uint32 UsbIrq1                        :1; 
    uint32 UsbIrq0                        :1; 
    uint32 FpmIrq                         :1; 
    uint32 BridgeUbus1StatIrq             :1; 
    uint32 BridgeUbus0StatIrq             :1; 
    uint32 PcieEpLinkRst                  :1; 
    uint32 PcieRcIrq                      :1; 
    uint32 Reserved2                      :5; 
    uint32 PeriphErrorDetect              :1; 
    uint32 RingOscIrq                     :1; 
    uint32 HsSpiIrq                       :1; 
    uint32 I2cIrq                         :1; 
    uint32 Simcard1Irq                    :1; 
    uint32 Simcard0Irq                    :1; 
    uint32 Uart1irq                       :1; 
    uint32 Uart0irq                       :1; 
    uint32 LsSpiIrq                       :1; 
    uint32 Timrirq                        :1; 
  } Bits;
  uint32 Reg32;
}  IntControlPeriphIrqMask;


typedef union {
  struct {
    uint32 ExtIrq                         :1; 
    uint32 Reserved                       :2; 
    uint32 ObObIrq                        :1; 
    uint32 DavicIrq                       :1; 
    uint32 GphyIrqb                       :1; 
    uint32 UniIrq                         :1; 
    uint32 UniIrq2                        :1; 
    uint32 ApmIudmaIrq                    :1; 
    uint32 ApmIrq                         :1; 
    uint32 UsbIrq1                        :1; 
    uint32 UsbIrq0                        :1; 
    uint32 FpmIrq                         :1; 
    uint32 BridgeUbus1StatIrq             :1; 
    uint32 BridgeUbus0StatIrq             :1; 
    uint32 PcieEpLinkRst                  :1; 
    uint32 PcieRcIrq                      :1; 
    uint32 Reserved2                      :5; 
    uint32 PeriphErrorDetect              :1; 
    uint32 RingOscIrq                     :1; 
    uint32 HsSpiIrq                       :1; 
    uint32 I2cIrq                         :1; 
    uint32 Simcard1Irq                    :1; 
    uint32 Simcard0Irq                    :1; 
    uint32 Uart1irq                       :1; 
    uint32 Uart0irq                       :1; 
    uint32 LsSpiIrq                       :1; 
    uint32 Timrirq                        :1; 
  } Bits;
  uint32 Reg32;
}  IntControlPeriphIrqSense;


typedef union {
  struct {
    uint32 ExtIrq                         :1; 
    uint32 Reserved                       :2; 
    uint32 ObObIrq                        :1; 
    uint32 DavicIrq                       :1; 
    uint32 GphyIrqb                       :1; 
    uint32 UniIrq                         :1; 
    uint32 UniIrq2                        :1; 
    uint32 ApmIudmaIrq                    :1; 
    uint32 ApmIrq                         :1; 
    uint32 UsbIrq1                        :1; 
    uint32 UsbIrq0                        :1; 
    uint32 FpmIrq                         :1; 
    uint32 BridgeUbus1StatIrq             :1; 
    uint32 BridgeUbus0StatIrq             :1; 
    uint32 PcieEpLinkRst                  :1; 
    uint32 PcieRcIrq                      :1; 
    uint32 Reserved2                      :5; 
    uint32 PeriphErrorDetect              :1; 
    uint32 RingOscIrq                     :1; 
    uint32 HsSpiIrq                       :1; 
    uint32 I2cIrq                         :1; 
    uint32 Simcard1Irq                    :1; 
    uint32 Simcard0Irq                    :1; 
    uint32 Uart1irq                       :1; 
    uint32 Uart0irq                       :1; 
    uint32 LsSpiIrq                       :1; 
    uint32 Timrirq                        :1; 
  } Bits;
  uint32 Reg32;
}  IntControlPeriphIrqStatus;


typedef union {
  struct {
    // Higher word --> I dont know why!!!
    uint32 Chipid                         :16;
    uint32 Revid                          :16;
    // Lower word
  } Bits;
  uint32 Reg32;
}  IntControlRevId;


typedef union {
  struct {
    uint32 Reserved                       :16;
    uint32 GphyClkEn                      :1; // 15
    uint32 Usb1ClkEn                      :1; // 14
    uint32 UsbClkEn                       :1; // 13
    uint32 DsTunerClkEn                   :1; 
    uint32 ObClkEn                        :1; 
    uint32 UsTopClkEn                     :1; 
    uint32 Ds7ClkEn                       :1; 
    uint32 Ds6ClkEn                       :1; // 8
    uint32 Ds5AClkEn                      :1; 
    uint32 Ds4BClkEn                      :1; 
    uint32 Ds3ClkEn                       :1; 
    uint32 Ds2ClkEn                       :1; 
    uint32 Ds1ClkEn                       :1; 
    uint32 Ds0ClkEn                       :1; 
    uint32 GphyPllClkEn                   :1; 
    uint32 PciePllClkEn                   :1; 
  } Bits;
  uint32 Reg32;
}  IntControlClkControlHi;


typedef union {
  struct {
    uint32 AudioBClkEn                    :1; // 31
    uint32 AudioAClkEn                    :1; 
    uint32 AudioComClkEn                  :1; // 29
    uint32 NtpClkEn                       :1; 
    uint32 PcmClkEn                       :1; // 27
    uint32 BmuClkEn                       :1; 
    uint32 ApmClkEn                       :1; 
    uint32 ApmPllClkEn                    :1; 
    uint32 MipsClkEn                      :1; // 23, this has to be enabled!
    uint32 BrgRbusClkEn                   :1; // 22
    uint32 DavicClkEn                     :1; // 21
    uint32 Unimac1ClkEn                   :1; // 20
    uint32 Unimac0ClkEn                   :1; // 19
    uint32 SpimGlessClkEn                 :1; // 18
    uint32 SpimClkEn                      :1; // 17
    uint32 PcieClkEn                      :1; // 16
    uint32 Tc3ClkEn                       :1; 
    uint32 Tc2ClkEn                       :1; 
    uint32 Tc1ClkEn                       :1; 
    uint32 Tc0ClkEn                       :1; 
    uint32 SegdmaClkEn                    :1; 
    uint32 Usmac30ClkEn                   :1; 
    uint32 Usmac20ClkEn                   :1; 
    uint32 D3dsmacClkEn                   :1; // 8
    uint32 MspClkEn                       :1; 
    uint32 MepClkEn                       :1; 
    uint32 FapClkEn                       :1; 
    uint32 UtpClkEn                       :1; 
    uint32 DtpClkEn                       :1; 
    uint32 CryptoClkEn                    :1; 
    uint32 FpmClkEn                       :1; 
    uint32 DdrClkEn                       :1; 
  } Bits;
  uint32 Reg32;
}  IntControlClkControlLo;


typedef union {
  struct {
    uint32 Reserved                       :7; 
    uint32 DiagMbistCntl                  :25;                              
  } Bits;
  uint32 Reg32;
}  IntControlDiagControl;


typedef union {
  struct {
    uint32 Reserved                       :30;
    uint32 DsphyByp                       :1; 
    uint32 Reserved2                      :1; 
  } Bits;
  uint32 Reg32;
}  IntControlDiagMiscControl;


typedef union {
  struct {
    uint32 Reserved                       :24;
    uint32 DiagReadBackHi                 :8; 
                                              
  } Bits;
  uint32 Reg32;
}  IntControlDiagReadBackHi;


typedef union {
  struct {
    uint32 SpiOverride                    :1; 
                                              
                                              
    uint32 Reserved                       :2; 
    uint32 UbusObservabilityEn            :1; 
                                              
                                              
                                              
    uint32 DiagHiClkEn                    :1; 
                                              
    uint32 DiagHiEn                       :1; 
                                              
                                              
    uint32 DiagLoClkEn                    :1; 
                                              
    uint32 DiagLoEn                       :1; 
                                              
                                              
    uint32 Reserved2                      :2; 
    uint32 DiagClkPhsSel                  :6; 
                                              
    uint32 DiagHiSel                      :8; 
    uint32 DiagLoSel                      :8; 
  } Bits;
  uint32 Reg32;
}  IntControlDiagSelControl;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 SoftRstDdr                     :1; 
  } Bits;
  uint32 Reg32;
}  IntControlSoftReset;


typedef union {
  struct {
    uint32 Reserved                       :24;
    uint32 SoftRstTc3                     :1; 
    uint32 SoftRstTc2                     :1; 
    uint32 SoftRstTc1                     :1; 
    uint32 SoftRstTc0                     :1; 
    uint32 SoftRstPerst                   :1; 
    uint32 SoftRstD3legmac                :1; 
    uint32 SoftRstHsSpiPll                :1; 
    uint32 SoftRstHsSpi                   :1; 
  } Bits;
  uint32 Reg32;
}  IntControlSoftResetBHi;


typedef union {
  struct {
    uint32 SoftRstCrypto                  :1; 
    uint32 SoftRstPcieCore                :1; 
    uint32 SoftRstDavIudma                :1; 
    uint32 SoftRstDac                     :1; 
    uint32 SoftRstHvgb                    :1; 
    uint32 SoftRstHvga                    :1; 
    uint32 SoftRstSeg                     :1; 
    uint32 SoftRstMsp                     :1; 
    uint32 SoftRstMep                     :1; 
    uint32 SoftRstFap                     :1; 
    uint32 SoftRstDtp                     :1; 
    uint32 SoftRstUtp                     :1; 
    uint32 SoftRstD3mac                   :1; 
    uint32 SoftRstU3log                   :1; 
    uint32 SoftRstU3reg                   :1; 
    uint32 SoftRstU3mac                   :1; // 16
    uint32 SoftRstBmu                     :1; 
    uint32 SoftRstHvg                     :1; 
    uint32 SoftRstPcm                     :1; // 13
    uint32 SoftRstApm                     :1; 
    uint32 SoftRstAudio                   :1; 
    uint32 SoftRstRsvd1                   :1; 
    uint32 SoftRstUnimac1                 :1; // 9
    uint32 SoftRstUnimac0                 :1; 
    uint32 SoftRstDs                      :1; 
    uint32 SoftRstGphy                    :1; 
    uint32 SoftRstFpm                     :1; // 5
    uint32 SoftRstRsvd0                   :1; 
    uint32 SoftRstPcie                    :1; 
    uint32 SoftRstUsb                     :1; 
    uint32 SoftRstAcp                     :1; 
    uint32 SoftRstSpi                     :1; // 0
  } Bits;
  uint32 Reg32;
}  IntControlSoftResetBLo;


typedef union {
  struct {
    uint32 Reserved                       :31;
    uint32 SoftRst                        :1; 
                                              
  } Bits;
  uint32 Reg32;
}  IntControlTimerControl;


typedef union {
  struct {
    uint32 Reserved                       :9; 
    uint32 TestbusUbusClkEn               :1; 
    uint32 BrgUbusClkEn                   :1; 
                                              
    uint32 DavicUbusClkEn                 :1; 
    uint32 UsbotgUbusClkEn                :1; 
    uint32 Unimac1UbusClkEn               :1; 
    uint32 Unimac0UbusClkEn               :1; 
    uint32 FapUbusClkEn                   :1; 
    uint32 MspUbusClkEn                   :1; 
    uint32 MepUbusClkEn                   :1; 
    uint32 DtpUbusClkEn                   :1; 
    uint32 UtpcryptoUbusClkEn             :1; 
                                              
    uint32 ApmUbusClkEn                   :1; 
    uint32 FpmUbusClkEn                   :1; 
    uint32 Usmac30UbusClkEn               :1; 
    uint32 D3dsmacUbusClkEn               :1; 
    uint32 SegmacUbusClkEn                :1; 
                                              
    uint32 MipsUbusClkEn                  :1; 
    uint32 PcieUbusClkEn                  :1; 
    uint32 DdrUbusClkEn                   :1; 
    uint32 Brg10UbusClkEn                 :1; 
    uint32 Brg01UbusClkEn                 :1; 
    uint32 Arb1UbusClkEn                  :1; 
    uint32 Arb0UbusClkEn                  :1; 
  } Bits;
  uint32 Reg32;
}  IntControlUbusClkControl;

typedef struct {
  IntControlRevId                     Revid;                   
  IntControlClkControlLo              ClkcontrolLo;            
  IntControlClkControlHi              ClkcontrolHi;            
  IntControlUbusClkControl            ClkcontrolUbus;          
  IntControlTimerControl              TimerControl;            
  IntControlDocsisIrqMask             DocsisIrqmask0;          
  IntControlDocsisIrqStatus           DocsisIrqstatus0;        
  IntControlDocsisIrqMask             DocsisIrqmask1;          
  IntControlDocsisIrqStatus           DocsisIrqstatus1;        
  IntControlDocsisIrqMask             DocsisIrqmask2;          
  IntControlDocsisIrqStatus           DocsisIrqstatus2;        
  IntControlIntPeriphIrqStatus        IntPeriphIrqstatus; // 2c
  IntControlPeriphIrqMask             PeriphIrqmask0;     // 30
  IntControlPeriphIrqStatus           PeriphIrqstatus0;   // 34
  IntControlPeriphIrqMask             PeriphIrqmask1;     // 38
  IntControlPeriphIrqStatus           PeriphIrqstatus1;   // 3c
  IntControlPeriphIrqMask             PeriphIrqmask2;     // 40
  IntControlPeriphIrqStatus           PeriphIrqstatus2;   // 44
  IntControlPeriphIrqMask             PeriphIrqmask3;     // 48
  IntControlPeriphIrqStatus           PeriphIrqstatus3;   // 4c
  IntControlIopIrqMask                Iopirqmask0;        // 50     
  IntControlIopIrqStatus              Iopirqstatus0;      // 54
  IntControlIopIrqMask                Iopirqmask1;        // 58
  IntControlIopIrqStatus              Iopirqstatus1;      // 5c
  IntControlDocsisIrqSense            DocsisIrqSense;     // 60
  IntControlPeriphIrqSense            PeriphIrqSense;          
  IntControlIopIrqSense               IopirqSense;             
  IntControlExtIrqControl             Ext0irqcontrol;          
  IntControlDiagControl               Diagcontrol;             
  IntControlExtIrqControl             Ext1irqcontrol;          
  IntControlIrqOutMask                IrqOutMask;         // 78
  IntControlDiagSelControl            Diagselcontrol;     // 7c
  uint32                              Diagreadback;       // 80
  IntControlDiagReadBackHi            Diagreadbackhi;     // 84
  IntControlDiagMiscControl           Diagmisccontrol;    // 88
  IntControlSoftResetBLo              SoftresetbLo;       // 8c
  IntControlSoftResetBHi              SoftresetbHi;            
  IntControlSoftReset                 Softreset;               
  IntControlExtIrqMuxSel0             Extirqmuxsel0;           
}  IntControlRegs;

#endif 



