// ****************************************************************************
//
// Copyright (c) 2008 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         fpm_ctrl.h
//  Generated by:     RDB Utility
//  Creation Date:    8/7/2008
//  Command Line:     
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef FPM_CTRL_H__
#define FPM_CTRL_H__


enum FPM_CTRL_FP_BUF_SIZE {
  FPM_CTRL_FP_BUF_SIZE_BUF512=0x0,                   
  FPM_CTRL_FP_BUF_SIZE_BUF768=0x1,                   
  FPM_CTRL_FP_BUF_SIZE_BUF1024=0x2,                  
  FPM_CTRL_FP_BUF_SIZE_BUF1280=0x3,                  
  FPM_CTRL_FP_BUF_SIZE_BUF1536=0x4,                  
  FPM_CTRL_FP_BUF_SIZE_BUF1792=0x5,                  
  FPM_CTRL_FP_BUF_SIZE_BUF2048=0x6,                  
  FPM_CTRL_FP_BUF_SIZE_BUF2304=0x7,                  
};


typedef union {
  struct {
    uint32 Reserved                       :24;
    uint32 Pool4CacheBypassEn             :1; 
                                              
                                              
    uint32 Pool3CacheBypassEn             :1; 
                                              
                                              
    uint32 Pool2CacheBypassEn             :1; 
                                              
                                              
    uint32 Pool1CacheBypassEn             :1; 
                                              
                                              
    uint32 Pool4SearchMode                :1; 
                                              
                                              
                                              
    uint32 Pool3SearchMode                :1; 
                                              
                                              
                                              
    uint32 Pool2SearchMode                :1; 
                                              
                                              
                                              
    uint32 Pool1SearchMode                :1; 
                                              
                                              
                                              
  } Bits;
  uint32 Reg32;
}  FpmCtrlFpmCfg1;


typedef union {
  struct {
    uint32 TpMuxCntrl                     :4; 
                                              
    uint32 Reserved                       :2; 
    uint32 MemCorruptCheckDisable         :1; 
                                              
                                              
                                              
                                              
    uint32 StopAllocCacheLoad             :1; 
                                              
                                              
                                              
    uint32 Reserved2                      :4; 
    uint32 Pool4Enable                    :1; 
                                              
                                              
    uint32 Pool3Enable                    :1; 
                                              
                                              
    uint32 Pool2Enable                    :1; 
                                              
                                              
    uint32 Pool1Enable                    :1; 
                                              
                                              
    uint32 StrictPriorityRequestType      :1; 
                                              
                                              
                                              
    uint32 Reserved3                      :1; 
    uint32 WeightForRoundRobinPolicy      :6; 
                                              
                                              
    uint32 ArbitrationPolicy              :3; 
                                              
                                              
                                              
                                              
    uint32 InitMem                        :1; 
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved4                      :4; 
  } Bits;
  uint32 Reg32;
}  FpmCtrlFpmCtl;


typedef union {
  struct {
    uint32 XonThreshold                   :16;
    uint32 XoffThreshold                  :16;
  } Bits;
  uint32 Reg32;
}  FpmCtrlFpmXonXoffCfg;


typedef union {
  struct {
    uint32 MemWr                          :1; 
                                              
                                              
                                              
    uint32 MemRd                          :1; 
                                              
                                              
                                              
    uint32 MemSel                         :2; 
                                              
                                              
                                              
                                              
                                              
                                              
    uint32 Reserved                       :10;
    uint32 MemAddr                        :16;
                                              
    uint32 Reserved2                      :2; 
  } Bits;
  uint32 Reg32;
}  FpmCtrlMemCtl;


typedef union {
  struct {
    uint32 Reserved                       :5; 
    uint32 FpBufSize                      :3; 
                                              
    uint32 Reserved2                      :24;
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolCfg1;


typedef union {
  struct {
    uint32 PoolBaseAddress                :30;
                                              
                                              
    uint32 Reserved                       :2; 
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolCfg2;


typedef union {
  struct {
    uint32 Reserved                       :19;
    uint32 IllegalAllocRequestMsk         :1; 
    uint32 IllegalAddressAccessMsk        :1; 
                                              
    uint32 XonMsk                         :1; 
    uint32 XoffMsk                        :1; 
    uint32 MemoryCorruptMsk               :1; 
    uint32 PoolDisFreeMultiMsk            :1; 
    uint32 MultiTokenIndexOutOfRangeMsk   :1; 
                                              
    uint32 MultiTokenNoValidMsk           :1; 
                                              
    uint32 FreeTokenIndexOutOfRangeMsk    :1; 
    uint32 FreeTokenNoValidMsk            :1; 
    uint32 PoolFullMsk                    :1; 
    uint32 FreeFifoFullMsk                :1; 
    uint32 AllocFifoFullMsk               :1; 
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolIntrMsk;


typedef union {
  struct {
    uint32 Reserved                       :19;
    uint32 IllegalAllocRequestSts         :1; 
                                              
                                              
                                              
    uint32 IllegalAddressAccessSts        :1; 
                                              
                                              
                                              
                                              
    uint32 XonStateSts                    :1; 
                                              
    uint32 XoffStateSts                   :1; 
                                              
    uint32 MemoryCorruptSts               :1; 
    uint32 PoolDisFreeMultiSts            :1; 
    uint32 MultiTokenIndexOutOfRangeSts   :1; 
                                              
    uint32 MultiTokenNoValidSts           :1; 
                                              
    uint32 FreeTokenIndexOutOfRangeSts    :1; 
                                              
    uint32 FreeTokenNoValidSts            :1; 
                                              
    uint32 PoolFullSts                    :1; 
                                              
    uint32 FreeFifoFullSts                :1; 
    uint32 AllocFifoFullSts               :1; 
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolIntrSts;


typedef union {
  struct {
    uint32 Ovrfl                          :16;
    uint32 Undrfl                         :16;
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolStat1;


typedef union {
  struct {
    uint32 PoolFull                       :1; 
                                              
                                              
    uint32 Reserved                       :1; 
    uint32 FreeFifoFull                   :1; 
    uint32 FreeFifoEmpty                  :1; 
    uint32 AllocFifoFull                  :1; 
    uint32 AllocFifoEmpty                 :1; 
    uint32 Reserved2                      :8; 
    uint32 NumOfTokensAvailable           :18;
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolStat2;


typedef union {
  struct {
    uint32 Reserved                       :14;
    uint32 NumOfNotValidTokenFrees        :18;
                                              
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolStat3;


typedef union {
  struct {
    uint32 Reserved                       :14;
    uint32 NumOfNotValidTokenMulti        :18;
                                              
  } Bits;
  uint32 Reg32;
}  FpmCtrlPoolStat4;

typedef struct {
  FpmCtrlFpmCtl                       FpmCtl;                  
  FpmCtrlFpmCfg1                      FpmCfg1;                 
  uint8                               Pad0[0x8];
  FpmCtrlPoolIntrMsk                  Pool1IntrMsk;            
  FpmCtrlPoolIntrSts                  Pool1IntrSts;            
  uint8                               Pad1[0x28];
  FpmCtrlPoolCfg1                     Pool1Cfg1;               
  FpmCtrlPoolCfg2                     Pool1Cfg2;               
  uint32                              Pool1Cfg3;               
  uint8                               Pad2[0x4];
  FpmCtrlPoolStat1                    Pool1Stat1;              
  FpmCtrlPoolStat2                    Pool1Stat2;              
  FpmCtrlPoolStat3                    Pool1Stat3;              
  FpmCtrlPoolStat4                    Pool1Stat4;              
  uint8                               Pad3[0x60];
  FpmCtrlFpmXonXoffCfg                Pool1XonXoffCfg;         
  uint8                               Pad4[0x3c];
  FpmCtrlMemCtl                       MemCtl;                  
  uint32                              MemData1;                
  uint32                              MemData2;                
  uint8                               Pad5[0x14];
  uint32                              Spare;                   
}  FpmCtrlRegs;

#endif 



