From de3bcf0068734c5076695dd8a6f7dd400c2abc2d Mon Sep 17 00:00:00 2001
From: Eugen Hristev <eugen.hristev@microchip.com>
Date: Mon, 30 Mar 2020 13:32:37 +0300
Subject: [PATCH 084/110] mmc: sdhci-of-at91: implement quirk: SDCLK stop while
 reset and switch

SAMA7G5 SDMMC HW block needs to have SDCLK stopped while resetting the
IP and changing UHS mode.
Implement this quirk.

Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
(cherry picked from linux-6.1-trunk/at91/mmc)
Signed-off-by: Andrei Simion <andrei.simion@microchip.com>
---
 drivers/mmc/host/sdhci-of-at91.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

--- a/drivers/mmc/host/sdhci-of-at91.c
+++ b/drivers/mmc/host/sdhci-of-at91.c
@@ -101,6 +101,11 @@ static void sdhci_at91_set_uhs_signaling
 					 unsigned int timing)
 {
 	u8 mc1r;
+	u16 clk = sdhci_readw(host, SDHCI_CLOCK_CONTROL);
+	/* SDCLK must be disabled while changing the mode */
+	if (clk & SDHCI_CLOCK_CARD_EN)
+		sdhci_writew(host, clk & ~SDHCI_CLOCK_CARD_EN,
+			     SDHCI_CLOCK_CONTROL);
 
 	if (timing == MMC_TIMING_MMC_DDR52) {
 		mc1r = sdhci_readb(host, SDMMC_MC1R);
@@ -108,6 +113,12 @@ static void sdhci_at91_set_uhs_signaling
 		sdhci_writeb(host, mc1r, SDMMC_MC1R);
 	}
 	sdhci_set_uhs_signaling(host, timing);
+
+	/* reenable SDCLK */
+	if (clk & SDHCI_CLOCK_CARD_EN) {
+		clk = sdhci_readw(host, SDHCI_CLOCK_CONTROL);
+		sdhci_writew(host, clk | SDHCI_CLOCK_CARD_EN, SDHCI_CLOCK_CONTROL);
+	}
 }
 
 static void sdhci_at91_reset(struct sdhci_host *host, u8 mask)
@@ -115,9 +126,21 @@ static void sdhci_at91_reset(struct sdhc
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
 	struct sdhci_at91_priv *priv = sdhci_pltfm_priv(pltfm_host);
 	unsigned int tmp;
+	u16 clk = sdhci_readw(host, SDHCI_CLOCK_CONTROL);
+
+	/* SDCLK must be disabled while resetting the HW block */
+	if (clk & SDHCI_CLOCK_CARD_EN)
+		sdhci_writew(host, clk & ~SDHCI_CLOCK_CARD_EN,
+			     SDHCI_CLOCK_CONTROL);
 
 	sdhci_reset(host, mask);
 
+	/* reenable SDCLK */
+	if (clk & SDHCI_CLOCK_CARD_EN) {
+		clk = sdhci_readw(host, SDHCI_CLOCK_CONTROL);
+		sdhci_writew(host, clk | SDHCI_CLOCK_CARD_EN, SDHCI_CLOCK_CONTROL);
+	}
+
 	if ((host->mmc->caps & MMC_CAP_NONREMOVABLE)
 	    || mmc_gpio_get_cd(host->mmc) >= 0)
 		sdhci_at91_set_force_card_detect(host);
