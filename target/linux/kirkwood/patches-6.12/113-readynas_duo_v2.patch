--- a/arch/arm/boot/dts/marvell/kirkwood-netgear_readynas_duo_v2.dts
+++ b/arch/arm/boot/dts/marvell/kirkwood-netgear_readynas_duo_v2.dts
@@ -19,6 +19,13 @@
 		reg = <0x00000000 0x10000000>;
 	};
 
+	aliases {
+		led-boot = &led_power;
+		led-failsafe = &led_power;
+		led-running = &led_power;
+		led-upgrade = &led_power;
+	};
+
 	chosen {
 		bootargs = "console=ttyS0,115200n8 earlyprintk";
 		stdout-path = &uart0;
@@ -115,7 +122,7 @@
 			      &pmx_led_blue_backup >;
 		pinctrl-names = "default";
 
-		power_led {
+		led_power: power_led {
 			label = "status:blue:power_led";
 			gpios = <&gpio0 31 GPIO_ACTIVE_LOW>;
 			default-state = "keep";
@@ -129,11 +136,13 @@
 		disk1_led {
 			label = "status:blue:disk1_led";
 			gpios = <&gpio0 23 GPIO_ACTIVE_LOW>;
+			linux,default-trigger = "ata1";
 		};
 
 		disk2_led {
 			label = "status:blue:disk2_led";
 			gpios = <&gpio0 22 GPIO_ACTIVE_LOW>;
+			linux,default-trigger = "ata2";
 		};
 
 		backup_led {
@@ -150,7 +159,13 @@
 
 		power-button {
 			label = "Power Button";
-			linux,code = <KEY_POWER>;
+			/* Power button and INT pin from PHY are both connected
+			 * to this GPIO. Every network restart causes PHY restart
+			 * and button is pressed. It's difficult to use it as
+			 * KEY_POWER without changes in kernel (or netifd) so
+			 * the button is configured as regular one.
+			 */
+			linux,code = <BTN_1>;
 			gpios = <&gpio1 15 GPIO_ACTIVE_LOW>;
 		};
 
@@ -208,18 +223,13 @@
 	};
 
 	partition@200000 {
-		label = "uImage";
+		label = "kernel";
 		reg = <0x0200000 0x600000>;
 	};
 
 	partition@800000 {
-		label = "minirootfs";
-		reg = <0x0800000 0x1000000>;
-	};
-
-	partition@1800000 {
-		label = "jffs2";
-		reg = <0x1800000 0x6800000>;
+		label = "ubi";
+		reg = <0x0800000 0x7800000>;
 	};
 };
 
