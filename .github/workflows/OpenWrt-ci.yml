#
# 这是自由软件，许可证为 MIT。
# 
# 版权所有 (C) 2019 P3TERX <https://p3terx.com>
# 版权所有 (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master  # 仅在 master 分支有 push 时触发
  # schedule:
  #   - cron: 0 20 * * * # 定时任务（已注释）
  release:
    types: [published]  # 发布 release 时触发

jobs:

  build_openwrt:

    name: Build OpenWrt firmware  # 工作名称：编译 OpenWrt 固件

    runs-on: ubuntu-latest  # 运行环境

    if: github.event.repository.owner.id == github.event.sender.id  # 只有仓库所有者推送才会运行

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master  # 检出 master 分支代码

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # 清理 docker 镜像
          docker rmi `docker images -q`
          # 删除不必要的软件和文件，释放空间
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          # 安装编译所需的软件包
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          # 自动移除不需要的软件包
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # 以下为挂载目录及软链操作，已注释
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h  # 查看磁盘空间使用情况

      - name: Update feeds
        run: |
          # 更新和安装 OpenWrt feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          # 生成配置文件
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config  # 移除行首空格
          make defconfig  # 根据 .config 生成最终配置

      - name: Make download
        run: |
          # 下载依赖包
          make download -j8 || make download -j1 V=s
          # 删除小于1KB的文件
          rm -rf $(find ./dl/ -size -1024c)
          df -h  # 查看磁盘空间

      - name: Compile firmware
        run: |
          # 编译固件
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          # 整理编译产物
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo  # 上传编译信息
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package   # 上传编译的 ipk 包
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware # 上传固件
          path: ./bin/targets/
