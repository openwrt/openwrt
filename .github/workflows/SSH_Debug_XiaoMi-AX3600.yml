name: Build with tmate SSH Debug for XiaoMi-AX3600

on:
  workflow_dispatch:
    inputs:
      manual_config:
        description: "Manually generate XiaoMi-AX3600 config via SSH (y/n)"
        default: "y"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3 rsync unzip zlib1g-dev file wget
        if apt-cache show python3-distutils 2>/dev/null | grep -q '^Version:'; then
          sudo apt-get install -y python3-distutils
        fi

    #- name: Start SSH session with tmate
    - name: SSH 远程调试（tmate）
      if: ${{ github.event.inputs.manual_config == 'y' }}
      uses: mxschmitt/action-tmate@v3
       # 不加 limit-access-to-actor，以便显示 SSH 连接和 web 终端链接（含密码）
      #with:
      #  limit-access-to-actor: true

    - name: Generate XiaoMi-AX3600 config (prompt)
      if: ${{ github.event.inputs.manual_config != 'y' }}
      run: |
        # 自动生成 .config（仅当未手动配置时）
        echo -e "CONFIG_TARGET_ipq807x=y\nCONFIG_TARGET_ipq807x_generic=y\nCONFIG_TARGET_ipq807x_generic_DEVICE_xiaomi_ax3600=y" > .config
        make defconfig
        # 手动配置 .config（通过 SSH
        echo "请通过上面的 tmate SSH 连接，手动生成 AX3600 的 .config 配置文件。"
        echo "完成后请在 tmate 终端执行 exit 以继续。"
        sleep 60  # 保证用户看到消息
    # 可选：上传 .config 作为 workflow artifact（供下载）
    - name: Upload config file
      uses: actions/upload-artifact@v4
      with:
        name: ax3600-config
        path: .confi
        
    # 编译
    - name: Continue compilation
      run: |
        if [ ! -f .config ]; then
          echo "No .config file found, please generate config first!"
          exit 1
        fi
        make download -j$(nproc)
        make -j$(nproc) V=s
