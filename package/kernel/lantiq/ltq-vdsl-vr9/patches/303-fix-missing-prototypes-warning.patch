From: Shiji Yang <yangshiji66@outlook.com>
Date: Fri, 9 May 2025 02:48:52 +0800
Subject: [PATCH] fix missing-prototypes warning

This patch fixes various missing-prototypes build warnings on
6.12 kernel.

Signed-off-by: Shiji Yang <yangshiji66@outlook.com>
---
 src/common/drv_dsl_cpe_api.c        | 12 ++++++------
 src/common/drv_dsl_cpe_os_linux.c   |  4 ++--
 src/g997/drv_dsl_cpe_api_g997_vrx.c |  1 +
 3 files changed, 9 insertions(+), 8 deletions(-)

--- a/src/common/drv_dsl_cpe_api.c
+++ b/src/common/drv_dsl_cpe_api.c
@@ -2871,7 +2871,7 @@ DSL_Error_t DSL_DRV_LoopLengthStatusGet(
    return nErrCode;
 }
 
-DSL_Error_t DSL_DRV_RetxStatisticsGet(
+static DSL_Error_t DSL_DRV_RetxStatisticsGet(
    DSL_IN DSL_Context_t *pContext,
    DSL_IN_OUT DSL_ReTxStatistics_t *pData)
 {
@@ -3044,7 +3044,7 @@ DSL_Error_t DSL_DRV_SystemInterfaceConfi
    \ref DSL_FIO_SYSTEM_INTERFACE_STATUS_GET
 */
 #ifdef INCLUDE_DSL_SYSTEM_INTERFACE
-DSL_Error_t DSL_DRV_SystemInterfaceStatusGet(
+static DSL_Error_t DSL_DRV_SystemInterfaceStatusGet(
    DSL_Context_t *pContext,
    DSL_SystemInterfaceStatus_t *pData)
 {
@@ -4372,7 +4372,7 @@ DSL_Error_t DSL_DRV_DBG_DebugFeatureConf
 #endif /* DSL_DEBUG_DISABLE*/
 
 #ifdef INCLUDE_DSL_FILTER_DETECTION
-DSL_Error_t DSL_DRV_FilterDetectionDataGet(
+static DSL_Error_t DSL_DRV_FilterDetectionDataGet(
    DSL_IN DSL_Context_t *pContext,
    DSL_OUT DSL_FilterDetection_t *pData)
 {
@@ -4422,7 +4422,7 @@ DSL_Error_t DSL_DRV_FilterDetectionDataG
 }
 #endif /* INCLUDE_DSL_FILTER_DETECTION */
 
-DSL_Error_t DSL_DRV_HybridSelectionDataGet(
+static DSL_Error_t DSL_DRV_HybridSelectionDataGet(
    DSL_IN DSL_Context_t *pContext,
    DSL_OUT DSL_HybridSelection_t *pData)
 {
@@ -4476,7 +4476,7 @@ DSL_Error_t DSL_DRV_HybridSelectionDataG
    return nErrCode;
 }
 
-DSL_Error_t DSL_DRV_OlrStatisticsGet(
+static DSL_Error_t DSL_DRV_OlrStatisticsGet(
    DSL_IN DSL_Context_t *pContext,
    DSL_OUT DSL_OlrStatistics_t *pData)
 {
@@ -4596,7 +4596,7 @@ DSL_void_t DSL_DRV_InitDataFree(
 #endif /* INCLUDE_DSL_INIT_DATA_PREPARE*/
 }
 
-DSL_Error_t DSL_DRV_IoctlHandleHelperCall(
+static DSL_Error_t DSL_DRV_IoctlHandleHelperCall(
    DSL_OpenContext_t *pOpenCtx,
    DSL_Context_t *pContext,
    DSL_boolean_t bIsInKernel,
--- a/src/common/drv_dsl_cpe_os_linux.c
+++ b/src/common/drv_dsl_cpe_os_linux.c
@@ -1214,7 +1214,7 @@ static struct class *dsl_class;
 static dev_t dsl_devt;
 
 /* Entry point of driver */
-int __init DSL_ModuleInit(void)
+static int __init DSL_ModuleInit(void)
 {
    DSL_int_t i;
 
@@ -1262,7 +1262,7 @@ int __init DSL_ModuleInit(void)
    return 0;
 }
 
-void __exit DSL_ModuleCleanup(void)
+static void __exit DSL_ModuleCleanup(void)
 {
    printk("Module will be unloaded"DSL_DRV_CRLF);
 
--- a/src/g997/drv_dsl_cpe_api_g997_vrx.c
+++ b/src/g997/drv_dsl_cpe_api_g997_vrx.c
@@ -11,6 +11,7 @@
 #define DSL_INTERN
 
 #include "drv_dsl_cpe_api.h"
+#include "drv_dsl_cpe_device_g997.h"
 
 #ifdef INCLUDE_DSL_CPE_API_VRX
 
