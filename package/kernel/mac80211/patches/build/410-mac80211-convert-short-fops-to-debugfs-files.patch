--- a/net/mac80211/debugfs.c
+++ b/net/mac80211/debugfs.c
@@ -42,8 +42,9 @@ static ssize_t name## _read(struct file
 }
 
 #define DEBUGFS_READONLY_FILE_OPS(name)			\
-static const struct debugfs_short_fops name## _ops = {				\
+static const struct file_operations name## _ops = {			\
 	.read = name## _read,						\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 };
 
@@ -141,9 +142,10 @@ static ssize_t aqm_write(struct file *fi
 	return -EINVAL;
 }
 
-static const struct debugfs_short_fops aqm_ops = {
+static const struct file_operations aqm_ops = {
 	.write = aqm_write,
 	.read = aqm_read,
+	.open = simple_open,
 	.llseek = default_llseek,
 };
 
@@ -192,9 +194,10 @@ static ssize_t airtime_flags_write(struc
 	return count;
 }
 
-static const struct debugfs_short_fops airtime_flags_ops = {
+static const struct file_operations airtime_flags_ops = {
 	.write = airtime_flags_write,
 	.read = airtime_flags_read,
+	.open = simple_open,
 	.llseek = default_llseek,
 };
 
@@ -222,8 +225,9 @@ static ssize_t aql_pending_read(struct f
 				       buf, len);
 }
 
-static const struct debugfs_short_fops aql_pending_ops = {
+static const struct file_operations aql_pending_ops = {
 	.read = aql_pending_read,
+	.open = simple_open,
 	.llseek = default_llseek,
 };
 
@@ -301,9 +305,10 @@ static ssize_t aql_txq_limit_write(struc
 	return count;
 }
 
-static const struct debugfs_short_fops aql_txq_limit_ops = {
+static const struct file_operations aql_txq_limit_ops = {
 	.write = aql_txq_limit_write,
 	.read = aql_txq_limit_read,
+	.open = simple_open,
 	.llseek = default_llseek,
 };
 
@@ -350,9 +355,10 @@ static ssize_t aql_enable_write(struct f
 	return count;
 }
 
-static const struct debugfs_short_fops aql_enable_ops = {
+static const struct file_operations aql_enable_ops = {
 	.write = aql_enable_write,
 	.read = aql_enable_read,
+	.open = simple_open,
 	.llseek = default_llseek,
 };
 
@@ -400,9 +406,10 @@ static ssize_t force_tx_status_write(str
 	return count;
 }
 
-static const struct debugfs_short_fops force_tx_status_ops = {
+static const struct file_operations force_tx_status_ops = {
 	.write = force_tx_status_write,
 	.read = force_tx_status_read,
+	.open = simple_open,
 	.llseek = default_llseek,
 };
 
@@ -427,8 +434,9 @@ static ssize_t reset_write(struct file *
 	return count;
 }
 
-static const struct debugfs_short_fops reset_ops = {
+static const struct file_operations reset_ops = {
 	.write = reset_write,
+	.open = simple_open,
 	.llseek = noop_llseek,
 };
 #endif
@@ -656,8 +664,9 @@ static ssize_t stats_ ##name## _read(str
 				      print_devstats_##name);		\
 }									\
 									\
-static const struct debugfs_short_fops stats_ ##name## _ops = {			\
+static const struct file_operations stats_ ##name## _ops = {		\
 	.read = stats_ ##name## _read,					\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 };
 
--- a/net/mac80211/debugfs_key.c
+++ b/net/mac80211/debugfs_key.c
@@ -26,15 +26,17 @@ static ssize_t key_##name##_read(struct
 #define KEY_READ_X(name) KEY_READ(name, name, "0x%x\n")
 
 #define KEY_OPS(name)							\
-static const struct debugfs_short_fops key_ ##name## _ops = {		\
+static const struct file_operations key_ ##name## _ops = {		\
 	.read = key_##name##_read,					\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 }
 
 #define KEY_OPS_W(name)							\
-static const struct debugfs_short_fops key_ ##name## _ops = {		\
+static const struct file_operations key_ ##name## _ops = {		\
 	.read = key_##name##_read,					\
 	.write = key_##name##_write,					\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 }
 
@@ -47,8 +49,9 @@ static const struct debugfs_short_fops k
 #define KEY_CONF_READ_D(name) KEY_CONF_READ(name, "%d\n")
 
 #define KEY_CONF_OPS(name)						\
-static const struct debugfs_short_fops key_ ##name## _ops = {		\
+static const struct file_operations key_ ##name## _ops = {		\
 	.read = key_conf_##name##_read,					\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 }
 
--- a/net/mac80211/debugfs_netdev.c
+++ b/net/mac80211/debugfs_netdev.c
@@ -221,9 +221,10 @@ static ssize_t ieee80211_if_fmt_##name(
 }
 
 #define _IEEE80211_IF_FILE_OPS(name, _read, _write)			\
-static const struct debugfs_short_fops name##_ops = {				\
+static const struct file_operations name##_ops = {			\
 	.read = (_read),						\
 	.write = (_write),						\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 }
 
--- a/net/mac80211/debugfs_sta.c
+++ b/net/mac80211/debugfs_sta.c
@@ -30,15 +30,17 @@ static ssize_t sta_ ##name## _read(struc
 #define STA_READ_D(name, field) STA_READ(name, field, "%d\n")
 
 #define STA_OPS(name)							\
-static const struct debugfs_short_fops sta_ ##name## _ops = {		\
+static const struct file_operations sta_ ##name## _ops = {		\
 	.read = sta_##name##_read,					\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 }
 
 #define STA_OPS_RW(name)						\
-static const struct debugfs_short_fops sta_ ##name## _ops = {		\
+static const struct file_operations sta_ ##name## _ops = {		\
 	.read = sta_##name##_read,					\
 	.write = sta_##name##_write,					\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 }
 
@@ -448,8 +450,9 @@ STA_OPS_RW(agg_status);
 
 /* link sta attributes */
 #define LINK_STA_OPS(name)						\
-static const struct debugfs_short_fops link_sta_ ##name## _ops = {		\
+static const struct file_operations link_sta_ ##name## _ops = {		\
 	.read = link_sta_##name##_read,					\
+	.open = simple_open,						\
 	.llseek = generic_file_llseek,					\
 }
 
--- a/net/mac80211/rate.c
+++ b/net/mac80211/rate.c
@@ -249,8 +249,9 @@ static ssize_t rcname_read(struct file *
 				       ref->ops->name, len);
 }
 
-const struct debugfs_short_fops rcname_ops = {
+const struct file_operations rcname_ops = {
 	.read = rcname_read,
+	.open = simple_open,
 	.llseek = default_llseek,
 };
 #endif
--- a/net/mac80211/rate.h
+++ b/net/mac80211/rate.h
@@ -62,7 +62,7 @@ static inline void rate_control_add_sta_
 #endif
 }
 
-extern const struct debugfs_short_fops rcname_ops;
+extern const struct file_operations rcname_ops;
 
 static inline void rate_control_add_debugfs(struct ieee80211_local *local)
 {
