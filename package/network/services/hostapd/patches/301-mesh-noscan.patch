From: Daniel Golle <daniel@makrotopia.org>
Date: Fri, 20 Apr 2018 07:41:03 +0200
Subject: [PATCH] Allow HT40 also on 2.4GHz if noscan option is set, which also
 skips secondary channel scan just like noscan works in AP mode.

--- a/wpa_supplicant/config.c
+++ b/wpa_supplicant/config.c
@@ -2642,6 +2642,7 @@ static const struct parse_data ssid_fiel
 #else /* CONFIG_MESH */
 	{ INT_RANGE(mode, 0, 4) },
 #endif /* CONFIG_MESH */
+	{ INT_RANGE(noscan, 0, 1) },
 	{ INT_RANGE(proactive_key_caching, 0, 1) },
 	{ INT_RANGE(disabled, 0, 2) },
 	{ STR(id_str) },
--- a/wpa_supplicant/config_file.c
+++ b/wpa_supplicant/config_file.c
@@ -868,6 +868,7 @@ static void wpa_config_write_network(FIL
 	INT(mode);
 #ifdef CONFIG_MESH
 	INT(no_auto_peer);
+	INT(noscan);
 	INT_DEF(mesh_fwding, DEFAULT_MESH_FWDING);
 #endif /* CONFIG_MESH */
 	INT(frequency);
--- a/wpa_supplicant/config_ssid.h
+++ b/wpa_supplicant/config_ssid.h
@@ -1071,6 +1071,8 @@ struct wpa_ssid {
 	 */
 	int no_auto_peer;
 
+	int noscan;
+
 	/**
 	 * mesh_rssi_threshold - Set mesh parameter mesh_rssi_threshold (dBm)
 	 *
--- a/wpa_supplicant/mesh.c
+++ b/wpa_supplicant/mesh.c
@@ -538,6 +538,8 @@ static int wpa_supplicant_mesh_init(stru
 			   frequency);
 		goto out_free;
 	}
+	if (conf->noscan)
+		ssid->noscan = 1;
 
 	if (ssid->mesh_basic_rates == NULL) {
 		/*
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -3035,7 +3035,7 @@ static bool ibss_mesh_can_use_vht(struct
 				  const struct wpa_ssid *ssid,
 				  struct hostapd_hw_modes *mode)
 {
-	if (mode->mode != HOSTAPD_MODE_IEEE80211A)
+	if (mode->mode != HOSTAPD_MODE_IEEE80211A && !(ssid->noscan))
 		return false;
 
 	if (!drv_supports_vht(wpa_s, ssid))
@@ -3109,7 +3109,7 @@ static void ibss_mesh_select_40mhz(struc
 	int i, res;
 	unsigned int j;
 	static const int ht40plus_5ghz[] = {
-		36, 44, 52, 60, 100, 108, 116, 124, 132, 140,
+		1, 2, 3, 4, 5, 6, 7, 36, 44, 52, 60, 100, 108, 116, 124, 132, 140,
 		149, 157, 165, 173, 184, 192
 	};
 	static const int ht40plus_6ghz[] = {
@@ -3462,7 +3462,7 @@ void ibss_mesh_setup_freq(struct wpa_sup
 	int ieee80211_mode = wpas_mode_to_ieee80211_mode(ssid->mode);
 	enum hostapd_hw_mode hw_mode;
 	struct hostapd_hw_modes *mode = NULL;
-	int obss_scan = 1;
+	int obss_scan = !(ssid->noscan);
 	u8 channel;
 	bool is_6ghz, is_24ghz;
 	bool dfs_enabled = wpa_s->conf->country[0] && (wpa_s->drv_flags & WPA_DRIVER_FLAGS_RADAR);
@@ -3506,6 +3506,8 @@ void ibss_mesh_setup_freq(struct wpa_sup
 		freq->he_enabled = ibss_mesh_can_use_he(wpa_s, ssid, mode,
 							ieee80211_mode);
 	freq->channel = channel;
+	if (mode->mode == HOSTAPD_MODE_IEEE80211G && ssid->noscan)
+		ibss_mesh_select_40mhz(wpa_s, ssid, mode, freq, obss_scan, is_6ghz, dfs_enabled);
 	/* Setup higher BW only for 5 and 6 GHz */
 	if (mode->mode == HOSTAPD_MODE_IEEE80211A) {
 		ibss_mesh_select_40mhz(wpa_s, ssid, mode, freq, obss_scan,
