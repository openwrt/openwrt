{
	"$id": "https://openwrt.org/wifi.device.json",
	"$schema": "http://json-schema.org/draft-07/schema#",
	"description": "OpenWrt WiFi Device Schema",
	"type": "object",
	"properties": {
		"acs_chan_bias": {
			"description": "Can be used to increase (or decrease) the likelihood of a specific channel to be selected by the ACS algorithm",
			"type": "string"
		},
		"acs_exclude_dfs": {
			"description": "Exclude DFS channels from ACS",
			"type": "boolean",
			"default": false
		},
		"airtime_mode": {
			"description": "Set the airtime policy operating mode",
			"type": "number",
			"default": 0,
			"minimum": 0,
			"maximum": 3
		},
		"antenna_gain": {
			"description": "Reduction in antenna gain from regulatory maximum in dBi",
			"type": "number",
			"default": 0
		},
		"assoc_sa_query_max_timeout": {
			"description": "Association SA Query maximum timeout",
			"type": "number"
		},
		"assoc_sa_query_retry_timeout": {
			"description": "Association SA Query retry timeout",
			"type": "number"
		},
		"auth_cache": {
			"type": "alias",
			"default": "okc"
		},
		"background_radar": {
			"type": "alias",
			"default": "enable_background_radar"
		},
		"band": {
			"description": "The wireless band thatthe radio shall operate on",
			"type": "string",
			"enum": [
				"2g",
				"5g",
				"6g",
				"60g"
			]
		},
		"basic_rate": {
			"type": "alias",
			"default": "basic_rates"
		},
		"basic_rates": {
			"description": "Set the supported basic rates. Each basic_rate is measured in kb/s. This option only has an effect on ap and adhoc wifi-ifaces. ",
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"beacon_int": {
			"description": "Set the beacon interval. This is the time interval between beacon frames, measured in units of 1.024 ms. hostapd permits this to be set between 15 and 65535. This option only has an effect on ap and adhoc wifi-ifaces",
			"type": "number",
			"default": 100,
			"minimum": 15,
			"maximum": 65535
		},
		"beacon_rate": {
			"description": "Beacon frame TX rate configuration",
			"type": "string"
		},
		"beamformee_antennas": {
			"description": "Beamformee antenna override",
			"type": "number",
			"default": 4
		},
		"beamformer_antennas": {
			"description": "Beamformer antenna override",
			"type": "number",
			"default": 4
		},
		"bssid": {
			"description": "Overrides the MAC address used for the Wi-Fi interface. Warning: if the MAC address specified is a multicast address, this override will fail silently. To avoid this problem, ensure that the mac address specified is a valid unicast mac address",
			"type": "string"
		},
		"cell_density": {
			"description": "Configures data rates based on the coverage cell density. Normal configures basic rates to 6, 12, 24 Mbps if legacy_rates is 0, else to 5.5, 11 Mbps. High configures basic rates to 12, 24 Mbps if legacy_rates is 0, else to the 11 Mbps rate. Very High configures 24 Mbps as the basic rate. Supported rates lower than the minimum basic rate are not offered. The basic_rate and supported_rates options overrides this option. 0 = Disabled, 1 = Normal, 2 = High, 3 = Very High",
			"type": "number",
			"default": 0,
			"minimum": 0,
			"maximum": 3
		},
		"chanbw": {
			"description": "Specifies a narrow channel width in MHz, possible values are: 5, 10, 20",
			"type": "number",
			"enum": [ 5,  10, 20 ]
		},
		"channel": {
			"description": "Specifies the wireless channel. “auto” defaults to the lowest available channel, or utilizes the ACS algorithm depending on hardware/driver support",
			"type": "string"
		},
		"channels": {
			"type": "alias",
			"default": "chanlist"
		},
		"channel_list": {
			"type": "alias",
			"default": "chanlist"
		},
		"chanlist": {
			"description": "Use specific channels, when channel is in “auto” mode. This option allows hostapd to select one of the provided channels when a channel should be automatically selected. Channels can be provided as range using hyphen ('-') or individual channels can be specified by space (' ') separated values",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"country": {
			"type": "alias",
			"default": "country_code"
		},
		"country3": {
			"description": "The third octet of the Country String (dot11CountryString)",
			"type": "string"
		},
		"country_code": {
			"description": "Specifies the country code, affects the available channels and transmission powers. For types mac80211 and broadcom a two letter country code is used (EN or DE). The madwifi driver expects a numeric code",
			"type": "string"
		},
		"country_ie": {
			"type": "alias",
			"default": "ieee80211d"
		},
		"disabled": {
			"description": "When set to 1, wireless network is disabled",
			"type": "boolean",
			"default": false
		},
		"distance": {
			"description": "Distance between the ap and the furthest client in meters",
			"type": "number",
			"default": 0
		},
		"doth": {
			"type": "alias",
			"default": "ieee80211h"
		},
		"dsss_cck_40": {
			"description": "DSSS/CCK Mode in 40 MHz allowed in Beacon, Measurement Pilot and Probe Response frames",
			"type": "boolean",
			"default": true
		},
		"enable_background_radar": {
			"description": "This feature allows CAC to be run on dedicated radio RF chains",
			"type": "boolean"
		},
		"frag": {
			"description": "Fragmentation threshold",
			"type": "number"
		},
		"greenfield": {
			"description": "Receive Greenfield - treats pre-80211n traffic as noise",
			"type": "boolean",
			"default": false
		},
		"he_bss_color": {
			"description": "BSS color to be announced",
			"type": "number",
			"minimum": 1,
			"maximum": 128,
			"default": 128
		},
		"he_bss_color_enabled": {
			"description": "Enable BSS color",
			"type": "boolean",
			"default": true
		},
		"he_default_pe_duration": {
			"description": "The duration of PE field in an HE PPDU in us",
			"type": "number",
			"default": 4,
			"enum": [ 4, 8, 12, 16 ]
		},
		"he_mu_beamformer": {
			"description": "HE multiple user beamformer support",
			"type": "boolean",
			"default": true
		},
		"he_mu_edca_ac_be_aci": {
			"type": "number",
			"default": 0
		},
		"he_mu_edca_ac_be_aifsn": {
			"type": "number",
			"default": 8
		},
		"he_mu_edca_ac_be_ecwmax": {
			"type": "number",
			"default": 10
		},
		"he_mu_edca_ac_be_ecwmin": {
			"type": "number",
			"default": 9
		},
		"he_mu_edca_ac_be_timer": {
			"type": "number",
			"default": 255
		},
		"he_mu_edca_ac_bk_aci": {
			"type": "number",
			"default": 1
		},
		"he_mu_edca_ac_bk_aifsn": {
			"type": "number",
			"default": 15
		},
		"he_mu_edca_ac_bk_ecwmax": {
			"type": "number",
			"default": 10
		},
		"he_mu_edca_ac_bk_ecwmin": {
			"type": "number",
			"default": 9
		},
		"he_mu_edca_ac_bk_timer": {
			"type": "number",
			"default": 255
		},
		"he_mu_edca_ac_vi_aci": {
			"type": "number",
			"default": 2
		},
		"he_mu_edca_ac_vi_aifsn": {
			"type": "number",
			"default": 5
		},
		"he_mu_edca_ac_vi_ecwmax": {
			"type": "number",
			"default": 7
		},
		"he_mu_edca_ac_vi_ecwmin": {
			"type": "number",
			"default": 5
		},
		"he_mu_edca_ac_vi_timer": {
			"type": "number",
			"default": 255
		},
		"he_mu_edca_ac_vo_aci": {
			"type": "number",
			"default": 3
		},
		"he_mu_edca_ac_vo_aifsn": {
			"type": "number",
			"default": 5
		},
		"he_mu_edca_ac_vo_ecwmax": {
			"type": "number",
			"default": 7
		},
		"he_mu_edca_ac_vo_ecwmin": {
			"type": "number",
			"default": 5
		},
		"he_mu_edca_ac_vo_timer": {
			"type": "number",
			"default": 255
		},
		"he_mu_edca_qos_info_param_count": {
			"type": "number",
			"default": 0
		},
		"he_mu_edca_qos_info_q_ack": {
			"type": "number",
			"default": 0
		},
		"he_mu_edca_qos_info_queue_request": {
			"type": "number",
			"default": 0
		},
		"he_mu_edca_qos_info_txop_request": {
			"type": "number",
			"default": 0
		},
		"he_oper_centr_freq_seg0_idx": {
			"description": "",
			"type": "string"
		},
		"he_oper_chwidth": {
			"description": "",
			"type": "string"
		},
		"he_6ghz_reg_pwr_type": {
			"description": "This config is to set the 6 GHz Access Point type.",
			"type": "number",
			"minimum": 0,
			"maximum": 4,
			"default": 0
		},
		"he_rts_threshold": {
			"description": "Duration of STA transmission",
			"type": "number",
			"default": 1023
		},
		"he_spr_non_srg_obss_pd_max_offset": {
			"description": "",
			"type": "number"
		},
		"he_spr_psr_enabled": {
			"description": "",
			"type": "boolean",
			"default": false
		},
		"he_spr_sr_control": {
			"description": "",
			"type": "number",
			"default": 3
		},
		"he_su_beamformee": {
			"description": "",
			"type": "boolean",
			"default": true
		},
		"he_su_beamformer": {
			"description": "",
			"type": "boolean",
			"default": true
		},
		"he_twt_required": {
			"description": "",
			"type": "boolean",
			"default": false
		},
		"hostapd_options": {
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"ht_coex": {
			"description": "Disable honoring 40 MHz intolerance in coexistence flags of stations",
			"type": "boolean",
			"default": false
		},
		"htc_vht": {
			"description": "STA supports receiving a VHT variant HT Control field",
			"type": "boolean",
			"default": true
		},
		"htmode": {
			"description": "Specifies the high throughput mode",
			"type": "string",
			"enum": [
				"NOHT", "HT20", "HT40-", "HT40+", "HT40",
				"VHT20", "VHT40", "VHT80", "VHT160",
				"HE20", "HE40", "HE80", "HE160",
				"EHT20", "EHT40", "EHT80", "EHT160", "EHT320" ]
		},
		"hwmode": {
			"type": "alias",
			"default": "hw_mode"
		},
		"hw_mode": {
			"description": "Legacy way, use the band property instead",
			"type": "string",
			"enum": [ "11a", "11b", "11g", "11ad" ]
		},
		"ieee80211d": {
			"description": "Enables IEEE 802.11d country IE (information element) advertisement in beacon and probe response frames. This IE contains the country code and channel/power map. Requires country",
			"type": "boolean",
			"default": true
		},
		"ieee80211h": {
			"description": "This enables radar detection and DFS support",
			"type": "boolean",
			"default": true
		},
		"ieee80211w": {
			"description": "Whether management frame protection (MFP) is enabled",
			"type": "number",
			"minimum": 0,
			"maximum": 2
		},
		"ieee80211w_max_timeout": {
			"type": "alias",
			"default": "assoc_sa_query_max_timeout"
		},
		"ieee80211w_mgmt_cipher": {
			"description": "Cypher used for MFP",
			"type": "string"
		},
		"ieee80211w_retry_timeout": {
			"type": "alias",
			"default": "assoc_sa_query_retry_timeout"
		},
		"ifname_prefix": {
			"description": "Default ifname prefix for this radio",
			"type": "string"
		},
		"iface_max_num_sta": {
			"description": "Limits the maximum allowed number of associated clients",
			"type": "number"
		},
		"ldpc": {
			"description": " LDPC (Low-Density Parity-Check code) capability ",
			"type": "boolean",
			"default": true
		},
		"legacy_rates": {
			"description": "Allow legacy 802.11b data rates (used by cell_density)",
			"type": "boolean",
			"default": false
		},
		"local_pwr_constraint": {
			"description": "Add Power Constraint element to Beacon and Probe Response frame",
			"type": "number",
			"minimum": 0,
			"maximum": 255
		},
		"log_80211": {
			"description": "Enable IEEE 802.11 logging",
			"type": "boolean",
			"default": true
		},
		"log_8021x": {
			"description": "Enable IEEE 802.1X logging",
			"type": "boolean",
			"default": true
		},
		"log_driver": {
			"description": "Enable driver interface logging",
			"type": "boolean",
			"default": true
		},
		"log_iapp": {
			"description": "Enable iapp logging",
			"type": "boolean",
			"default": true
		},
		"log_level": {
			"description": "Log severity",
			"type": "number",
			"default": 2,
			"minimum": 0,
			"maximum": 4
		},
		"log_mlme": {
			"description": "Enable MLME logging",
			"type": "boolean",
			"default": true
		},
		"log_radius": {
			"description": "Enable Radius logging",
			"type": "boolean",
			"default": true
		},
		"log_wpa": {
			"description": "Enable WPA logging",
			"type": "boolean",
			"default": true
		},
		"logger_stdout": {
			"description": "Log to stdout",
			"type": "boolean",
			"default": true
		},
		"logger_stdout_level": {
			"description": "Log severity",
			"type": "number",
			"default": 2,
			"minimum": 0,
			"maximum": 4
		},
		"logger_syslog": {
			"description": "Log to syslog",
			"type": "boolean",
			"default": true
		},
		"logger_syslog_level": {
			"description": "Syslog severity",
			"type": "number",
			"default": 2,
			"minimum": 0,
			"maximum": 4
		},
		"macaddr": {
			"type": "alias",
			"default": "bssid"
		},
		"macaddr_base": {
			"type": "string",
			"description": "Base MAC address used for deriving interface MAC addresses"
		},
		"max_amsdu": {
			"description": "Maximum A-MSDU length of 7935 octects (3839 octets if option set to 0)",
			"type": "boolean",
			"default": true
		},
		"maxassoc": {
			"type": "alias",
			"default": "iface_max_num_sta"
		},
		"mbssid": {
			"description": "Multiple BSSID Advertisement in IEEE 802.11ax IEEE Std 802.11ax-2021 added a feature where instead of multiple interfaces  on a common radio transmitting individual Beacon frames, those interfaces can form a set with a common Beacon frame transmitted for all Set minimum permitted max TX power (in dBm) for ACS and DFS channel selection",
			"type": "number",
			"default": 0,
			"minimum": 0,
			"maximum": 2
		},
		"min_tx_power": {
			"description": "Set minimum permitted max TX power (in dBm) for ACS and DFS channel selection",
			"type": "number",
			"default": 0
		},
		"mu_beamformee": {
			"description": "Supports operation as an MU beamformee",
			"type": "boolean",
			"default": true
		},
		"mu_beamformer": {
			"description": " Supports operation as an MU beamformer",
			"type": "boolean",
			"default": true
		},
		"multiple_bssid": {
			"type": "alias",
			"default": "mbssid"
		},
		"num_global_macaddr": {
			"description": "The number of MACs that this radio can use",
			"type": "number",
			"default": 1
		},
		"no_probe_resp_if_max_sta": {
			"description": "Do not answer probe requests if iface_max_num_sta was reached",
			"type": "boolean"
		},
		"noscan": {
			"description": "Do not scan for overlapping BSSs in HT40+/- mode.",
			"type": "boolean",
			"default": false
		},
		"okc": {
			"description": "Enable Opportunistic Key Caching",
			"type": "boolean"
		},
		"path": {
			"description": "Alternative to phy used to identify the device based paths in /sys/devices",
			"type": "string"
		},
		"phy": {
			"description": "Name of the phy, as described in board.json",
			"type": "string"
		},
		"radio": {
			"description": "Index of the phy radio (for multi-radio PHYs)",
			"type": "number",
			"default": -1
		},
		"reg_power_type": {
			"type": "alias",
			"default": "he_6ghz_reg_pwr_type"
		},
		"require_mode": {
			"description": "Sets the minimum client capability level mode that connecting clients must support to be allowed to connect",
			"type": "string",
			"enum": [ "n", "ac", "ax" ]
		},
		"rnr_beacon": {
			"description": "",
			"type": "string"
		},
		"rsn_preauth": {
			"description": "Enable IEEE 802.11i/RSN/WPA2 pre-authentication",
			"type": "boolean"
		},
		"rssi_ignore_probe_request": {
			"description": "Ignore Probe Request frames if RSSI is below given threshold (in dBm)",
			"type": "number",
			"default": 0
		},
		"rssi_reject_assoc_rssi": {
			"description": "Reject STA association if RSSI is below given threshold (in dBm)",
			"type": "number",
			"default": 0
		},
		"rts": {
			"description": "Override the RTS/CTS threshold",
			"type": "number"
		},
		"rts_threshold": {
			"description": "RTS/CTS threshold",
			"type": "number",
			"minimum": -1,
			"maximum": 65535
		},
		"rx_antenna_pattern": {
			"description": "Rx antenna pattern does not change during the lifetime of an association",
			"type": "boolean",
			"default": true
		},
		"rx_stbc": {
			"description": "Supports reception of PPDUs using STBC",
			"type": "number",
			"default": 3,
			"minimum": 0,
			"maximum": 4
		},
		"rxantenna": {
			"description": "Specifies the antenna for receiving, the value may be driver specific, usually it is 1 for the first and 2 for the second antenna. Specifying 0 enables automatic selection by the driver if supported. This option has no effect if diversity is enabled",
			"type": "number"
		},
		"rxldpc": {
			"description": "Supports receiving LDPC coded pkts",
			"type": "boolean",
			"default": true
		},
		"short_gi_160": {
			"description": "Short GI for 160 MHz",
			"type": "boolean",
			"default": true
		},
		"short_gi_20": {
			"description": "Short GI for 20 MHz",
			"type": "boolean",
			"default": true
		},
		"short_gi_40": {
			"description": "Short GI for 40 MHz",
			"type": "boolean",
			"default": true
		},
		"short_gi_80": {
			"description": "Short GI for 80 MHz",
			"type": "boolean",
			"default": true
		},
		"spectrum_mgmt_required": {
			"description": "Set Spectrum Management subfield in the Capability Information field",
			"type": "boolean",
			"default": false
		},
		"stationary_ap": {
			"description": "Stationary AP config indicates that the AP doesn't move hence location data can be considered as always up to date.",
			"type": "boolean",
			"default": true
		},
		"su_beamformee": {
			"description": "Single user beamformee",
			"type": "boolean",
			"default": true
		},
		"su_beamformer": {
			"description": "Single user beamformer",
			"type": "boolean",
			"default": true
		},
		"supported_rates": {
			"description": "Set the supported data rates. Each supported rate is measured in kb/s. This option only has an effect on ap and adhoc wifi-ifaces. This must be a superset of the rates set in basic_rate. The minimum basic rate should also be the minimum supported rate. It is recommended to use the cell_density option instead",
			"type": "array",
			"items": {
				"type": "number"
			}
		},
		"tx_antenna_pattern": {
			"description": "Tx antenna pattern does not change during the lifetime of an association",
			"type": "boolean",
			"default": true
		},
		"tx_burst": {
			"type": "alias",
			"default": "tx_queue_data2_burst"
		},
		"tx_queue_data2_burst": {
			"description": "",
			"type": "number"
		},
		"tx_stbc": {
			"description": "Transmit STBC (Space-Time Block Coding)",
			"type": "boolean",
			"default": true
		},
		"tx_stbc_2by1": {
			"description": "Supports transmission of at least 2×1 STBC",
			"type": "boolean",
			"default": true
		},
		"txantenna": {
			"description": "Specifies the antenna for transmitting, values are identical to rxantenna",
			"type": "number"
		},
		"txpower": {
			"description": "Specifies the maximum desired transmission power in dBm. The actual txpower used depends on regulatory requirements",
			"type": "number"
		},
		"vht160": {
			"description": "Supported channel widths. 0 == 160MHz and 80+80 MHz not supported, 1 == 160 MHz supported, 2 == 160MHz and 80+80 MHz supported",
			"type": "number",
			"minimum": 0,
			"maximum": 2,
			"default": 2
		},
		"vht_link_adapt": {
			"description": "TA supports link adaptation using VHT variant HT Control field",
			"type": "number",
			"minimum": 0,
			"maximum": 3
		},
		"vht_max_a_mpdu_len_exp": {
			"description": "Indicates the maximum length of A-MPDU pre-EOF padding that the STA can recv",
			"type": "number",
			"minimum": 0,
			"maximum": 7,
			"default": 7
		},
		"vht_max_mpdu": {
			"description": "Maximum MPDU length",
			"type": "number",
			"enum": [ 3895, 7991, 11454 ],
			"default": 11454
		},
		"vht_txop_ps": {
			"description": "VHT TXOP PS mode",
			"type": "boolean",
			"default": true
		}
	}
}
