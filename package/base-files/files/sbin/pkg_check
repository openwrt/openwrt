#!/bin/sh
#
# Package checksums checking script
# (C) 2018 CZ.NIC, z.s.p.o.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


ERRFATAL="no"
QUIET="yes"
MISSING=""
SUMMARY=""
NL="
"
RETRY_COUNT=3
RETRY_DELAY=5

# Arguments parsing
while expr "x$1" : "x-" > /dev/null; do
	if [ "x$1" = "x-s" ]; then
		ERRFATAL="yes"
		shift
	elif [ "x$1" = "x-v" ]; then
		QUIET="	no"
		shift
	else
		echo "Usage: $(basename $0) [-s] [-v] [pkg1 pkg2 ...]"
		echo
		echo "   -s   Stop on first change"
		echo "   -v   Verbose"
		if [ "x$1" = "x-h" ]; then
			exit 0
		else
			echo
			echo "ERROR: Unknown option '$1'"
			exit 1
		fi
	fi
done

# Check all packages by default
if [ -z "$1" ]; then
	set $(cd /usr/lib/opkg/info/; for i in *.files-sha256sum; do basename $i .files-sha256sum; done)
fi

# Function to check package checksums with retries
check_package() {
	local pkg=$1
	local attempt=1
	local success=0

	while [ $attempt -le $RETRY_COUNT ]; do
		if [ \! -f "/usr/lib/opkg/info/$pkg.files-sha256sum" ]; then
			if [ "$ERRFATAL" = no ]; then
				echo " * No checksums for $pkg - skipping"
				echo
			else
				echo " * No checksums for $pkg - exiting"
				exit 1
			fi
			if [ -z "$MISSING" ]; then
				MISSING="$pkg"
			else
				MISSING="$MISSING, $pkg"
			fi
			return
		fi
		[ $QUIET = yes ] || echo " * Checking package $pkg:"
		ERR=""
		CHECK="$(sha256sum -c /usr/lib/opkg/info/$pkg.files-sha256sum 2> /dev/null)"

		# Are the changed files config files?
		if [ $? -ne 0 ] && [ "$(cat "/usr/lib/opkg/info/$pkg.files-sha256sum")" ]; then
			NEWCHECK="$(echo "$CHECK" | grep '^.*: OK$')"
			for i in $(echo "$CHECK" | sed -n 's|^\(.*\): FAILED$|\1|p'); do
				if [ "$(grep "^$i\$" "/usr/lib/opkg/info/$pkg.conffiles" 2> /dev/null)" ] || \
				   [ "$(echo "$i" | grep "^/etc/uci-defaults/")" ]; then
					NEWCHECK="${NEWCHECK}${NL}${i}: CONFIGURED"
				else
					NEWCHECK="${NEWCHECK}${NL}${i}: FAILED"
					ERR="y"
				fi
			done
			CHECK="$NEWCHECK"
		fi

		# Do we have changed files or not?
		if [ -z "$ERR" ]; then
			[ $QUIET = yes ] || [ ! -s "/usr/lib/opkg/info/$pkg.files-sha256sum" ] || echo "$CHECK" | sed 's|^|   - |'
			[ $QUIET = yes ] || echo " * Package $pkg is ok"
			[ $QUIET = yes ] || echo
			success=1
			break
		else
			if [ $QUIET = yes ]; then
				echo " * Changes found in package $pkg:"
				echo "$CHECK" | sed -n 's|^\(.*:[[:blank:]]*FAILED\)$|   - \1|p'
			else
				echo "$CHECK" | sed 's|^|   - |'
				echo " * Changes found in package $pkg!"
			fi
			if [ "$ERRFATAL" = yes ]; then
				echo
				echo "Exiting on first change found!"
				exit 1
			fi
			for i in $(echo "$CHECK" | sed -n 's|^\(.*\): FAILED$|\1|p'); do
				SUMMARY="${SUMMARY}${NL} - $pkg: $i"
			done
			echo
		fi

		if [ $attempt -lt $RETRY_COUNT ]; then
			echo "Retrying in $RETRY_DELAY seconds... (Attempt $attempt of $RETRY_COUNT)"
			sleep $RETRY_DELAY
		fi
		attempt=$((attempt + 1))
	done

	if [ $success -eq 0 ]; then
		echo " * Failed to verify package $pkg after $RETRY_COUNT attempts"
	fi
}

# Iterate over packages
while [ "$1" ]; do
	check_package "$1"
	shift
done

# If there are changed files, report them
if [ "$SUMMARY" ]; then
	echo "Some packages contain changed files!"
	echo "Maybe something worth looking into?"
	echo "Here is the list of packages and changed files:"
	echo "$SUMMARY"
fi
if [ "$MISSING" ]; then
	echo "Following packages are missing checksums: $MISSING"
fi
if [ "$MISSING" ] || [ "$SUMMARY" ]; then
	exit 1
fi
